(storage-clear-all)
(storage-create "test" "meh")

(defcontext c: {:tabQuery {:url "*://*/*"}})
(c: (prn (+ 41 1)))

(window.alert "This works.")
(def al 'window.alert)
(al "This works too. whoo!")

(al (prompt "Does this work too?"))
(console.log (+ 41 1) "yay for n-arity" (c: (prompt "How about this?")))

(def title 'window.document.title)
(set! title "neat")
(window.alert window.document.title)

(c:window.alert "meh")

(do
  (def contexts (create-contexts {:title "*derStandard*"}))
  (inject-interpreter contexts)
  (def name "Alice")
  (arep-in-contexts contexts (pr-str `(prn (str "Yo, " ~name "!")))))

(defn fizz-buzz (start end)
  (subvec 
    (lazy-vector 
      #(cond 
        (= 0 (rem % 15)) "fizzbuzz" 
        (= 0 (rem % 3)) "fizz" 
        (= 0 (rem % 5)) "buzz"
        :else %)) 
    start end))

(defn add1 (x) (+ x 1))
(defmacro executePostfix (fn (l) (cons (last l) (butlast l))))

"example functions/macros loaded"
